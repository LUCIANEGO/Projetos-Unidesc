<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pong – Jogo Simples</title>
    <link rel="stylesheet" href="style.css">
    <style>
        body {
            background: #222;
            color: #fff;
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 0;
            padding: 0;
        }

        h1 {
            margin-top: 20px;
            font-size: 2rem;
        }

        #pong {
            display: block;
            margin: 30px auto;
            background: #111;
            border: 4px solid #fff;
            box-shadow: 0 0 30px #000;
        }
    </style>
</head>
<body>
    <h1>Pong – Jogo Simples</h1>
    <canvas id="pong" width="800" height="500"></canvas>
    <script>
        const canvas = document.getElementById("pong");
        const ctx = canvas.getContext("2d");

        const PADDLE_WIDTH = 10;
        const PADDLE_HEIGHT = 100;
        const BALL_SIZE = 12;
        const PLAYER_X = 30;
        const AI_X = canvas.width - PLAYER_X - PADDLE_WIDTH;

        let playerY = (canvas.height - PADDLE_HEIGHT) / 2;
        let aiY = (canvas.height - PADDLE_HEIGHT) / 2;
        let playerScore = 0;
        let aiScore = 0;

        let ballX = canvas.width / 2 - BALL_SIZE / 2;
        let ballY = canvas.height / 2 - BALL_SIZE / 2;
        let ballSpeedX = 6 * (Math.random() < 0.5 ? 1 : -1);
        let ballSpeedY = 5 * (Math.random() < 0.5 ? 1 : -1);

        function draw() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);

            ctx.fillStyle = "#fff";
            for (let i = 0; i < canvas.height; i += 30) {
                ctx.fillRect(canvas.width / 2 - 2, i, 4, 18);
            }

            ctx.fillStyle = "#0f0";
            ctx.fillRect(PLAYER_X, playerY, PADDLE_WIDTH, PADDLE_HEIGHT);

            ctx.fillStyle = "#f00";
            ctx.fillRect(AI_X, aiY, PADDLE_WIDTH, PADDLE_HEIGHT);

            ctx.fillStyle = "#fff";
            ctx.fillRect(ballX, ballY, BALL_SIZE, BALL_SIZE);

            ctx.font = "bold 36px Arial";
            ctx.fillText(playerScore, canvas.width / 4, 40);
            ctx.fillText(aiScore, 3 * canvas.width / 4, 40);
        }

        function moveAI() {
            let aiCenter = aiY + PADDLE_HEIGHT / 2;
            if (aiCenter < ballY + BALL_SIZE / 2 - 10) {
                aiY += 5;
            } else if (aiCenter > ballY + BALL_SIZE / 2 + 10) {
                aiY -= 5;
            }
            aiY = Math.max(0, Math.min(canvas.height - PADDLE_HEIGHT, aiY));
        }

        function update() {
            ballX += ballSpeedX;
            ballY += ballSpeedY;

            if (ballY <= 0 || ballY + BALL_SIZE >= canvas.height) {
                ballSpeedY *= -1;
            }

            if (
                ballX <= PLAYER_X + PADDLE_WIDTH &&
                ballY + BALL_SIZE >= playerY &&
                ballY <= playerY + PADDLE_HEIGHT
            ) {
                ballX = PLAYER_X + PADDLE_WIDTH;
                ballSpeedX *= -1;
                let collidePoint = (ballY + BALL_SIZE / 2) - (playerY + PADDLE_HEIGHT / 2);
                ballSpeedY = collidePoint * 0.25;
            }

            if (
                ballX + BALL_SIZE >= AI_X &&
                ballY + BALL_SIZE >= aiY &&
                ballY <= aiY + PADDLE_HEIGHT
            ) {
                ballX = AI_X - BALL_SIZE;
                ballSpeedX *= -1;
                let collidePoint = (ballY + BALL_SIZE / 2) - (aiY + PADDLE_HEIGHT / 2);
                ballSpeedY = collidePoint * 0.25;
            }

            if (ballX < 0) {
                aiScore++;
                resetBall();
            }

            if (ballX + BALL_SIZE > canvas.width) {
                playerScore++;
                resetBall();
            }
        }

        function resetBall() {
            ballX = canvas.width / 2 - BALL_SIZE / 2;
            ballY = canvas.height / 2 - BALL_SIZE / 2;
            ballSpeedX = 6 * (Math.random() < 0.5 ? 1 : -1);
            ballSpeedY = 5 * (Math.random() < 0.5 ? 1 : -1);
        }

        canvas.addEventListener("mousemove", function(e) {
            const rect = canvas.getBoundingClientRect();
            const scale = canvas.height / rect.height;
            let mouseY = (e.clientY - rect.top) * scale;
            playerY = mouseY - PADDLE_HEIGHT / 2;
            playerY = Math.max(0, Math.min(canvas.height - PADDLE_HEIGHT, playerY));
        });

        function gameLoop() {
            moveAI();
            update();
            draw();
            requestAnimationFrame(gameLoop);
        }

        gameLoop();
    </script>
</body>
</html>

